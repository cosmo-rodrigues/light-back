// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum State {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

model Cliente {
  id              Int          @id @unique @default(autoincrement())
  nome            String
  numeroDoCliente String
  endereco        Endereco[]
  instalacao      Instalacao[]

  @@map("clientes")
}

model Endereco {
  id          Int          @id @unique @default(autoincrement())
  endereco    String
  numero      String?
  semNumero   Boolean      @default(true) @map("sem_numero")
  complemento String?
  bairro      String
  cidade      String
  estado      State
  cep         String?
  cliente     Cliente?     @relation(fields: [clienteId], references: [id])
  clienteId   Int?         @map("cliente_id")
  instalacao  Instalacao[]
  fatura      Fatura[]

  @@map("enderecos")
}

model Instalacao {
  id                 Int       @id @unique @default(autoincrement())
  numeroDaInstalacao String
  cliente            Cliente   @relation(fields: [clienteId], references: [id])
  clienteId          Int       @map("cliente_id")
  endereco           Endereco? @relation(fields: [enderecoId], references: [id])
  enderecoId         Int?      @map("endereco_id")
  fatura             Fatura[]

  @@map("instalacoes")
}

model Fatura {
  id                                 Int        @id @unique @default(autoincrement())
  endereco                           Endereco   @relation(fields: [enderecoId], references: [id])
  enderecoId                         Int        @map("endereco_id")
  instalacao                         Instalacao @relation(fields: [instalacaoId], references: [id])
  instalacaoId                       Int        @map("instalacao_id")
  dataDaEmissao                      DateTime   @map("data_da_emissao")
  dataDoVencimento                   DateTime   @map("data_do_vencimento")
  faturaPaga                         Boolean?   @map("fatura_paga")
  dataDoPagamento                    DateTime   @map("data_do_pagamento")
  dataDaLeituraAnterior              DateTime   @default(now()) @map("data_da_leitura_anterior")
  dataDaLeituraAtual                 DateTime   @default(now()) @map("data_da_leitura_atual")
  dataDaProximaLeitura               DateTime   @default(dbgenerated("now() + interval '1 month'")) @map("data_da_proxima_leitura")
  energiaEletricaQuantidade          String     @map("energia_eletrica_quantidade")
  energiaEletricaPrecoUnitario       String     @map("energia_eletrica_preco_unitario")
  energiaEletricaValorTotal          String     @map("energia_eletrica_valor_total")
  energiaEletricaTarifaUnitaria      String     @map("energia_eletrica_tarifa_unitaria")
  energiaSCEESemICMSQuantidade       String     @map("energia_SCEE_sem_ICMS_quantidade")
  energiaSCEESemICMSPrecoUnitario    String     @map("energia_SCEE_sem_ICMS_preco_unitario")
  energiaSCEESemICMSValorTotal       String     @map("energia_SCEE_sem_ICMS_valor_total")
  energiaSCEESemICMSTarifaUnitaria   String     @map("energia_SCEE_sem_ICMS_tarifa_unitaria")
  energiaCompensadaGDIQuantidade     String     @map("energia_compensada_GDI_quantidade")
  energiaCompensadaGDIPrecoUnitario  String     @map("energia_compensada_GDI_preco_unitario")
  energiaCompensadaGDIValorTotal     String     @map("energia_compensada_GDI_valor_total")
  energiaCompensadaGDITarifaUnitaria String     @map("energia_compensada_GDI_tarifa_unitaria")
  valorASerPago                      String     @map("valor_a_ser_pago")

  @@map("faturas")
}
