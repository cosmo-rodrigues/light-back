// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum State {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

model Cliente {
  id         Int          @id @unique @default(autoincrement())
  nome       String
  endereco   Endereco[]
  instalacao Instalacao[]

  @@map("clientes")
}

model Endereco {
  id         Int          @id @unique @default(autoincrement())
  endereco   String
  numero     Int?
  semNumero  Boolean      @default(true) @map("sem_numero")
  bairro     String
  cidade     String
  estado     State
  cliente    Cliente?     @relation(fields: [clienteId], references: [id])
  clienteId  Int?         @map("cliente_id")
  instalacao Instalacao[]
  conta      Conta[]

  @@map("enderecos")
}

model Instalacao {
  id         Int       @id @unique @default(autoincrement())
  cliente    Cliente   @relation(fields: [clienteId], references: [id])
  clienteId  Int       @map("cliente_id")
  endereco   Endereco? @relation(fields: [enderecoId], references: [id])
  enderecoId Int?      @map("endereco_id")
  Conta      Conta[]

  @@map("instalacoes")
}

model Conta {
  id                                Int        @id @unique @default(autoincrement())
  endereco                          Endereco   @relation(fields: [enderecoId], references: [id])
  enderecoId                        Int        @map("endereco_id")
  instalacao                        Instalacao @relation(fields: [instalacaoId], references: [id])
  instalacaoId                      Int
  dataDaEmissao                     DateTime   @map("data_da_emissao")
  dataDoVencimento                  DateTime   @map("data_do_vencimento")
  dataDaLeituraAnterior             DateTime   @default(now()) @map("data_da_leitura_anterior")
  dataDaLeituraAtual                DateTime   @default(now()) @map("data_da_leitura_atual")
  dataDaProximaLeitura              DateTime   @default(dbgenerated("now() + interval '1 month'")) @map("data_da_proxima_leitura")
  energiaEletricaEmKWh              Int        @default(0) @map("energia_eletrica_em_KWh")
  energiaEletricaConsumoTotal       Int        @default(0) @map("energia_eletrica_consumo_total")
  energiaEletricaValorUnitario      Float      @default(0) @map("energia_eletrica_valor_unitario")
  energiaEletricaValorTotal         Float      @default(0) @map("energia_eletrica_valor_total")
  energiaSCEESemICMSEmKWh           Int        @default(0) @map("energia_SCEE_sem_ICMS_em_KWh")
  energiaSCEESemICMSConsumoTotal    Int        @default(0) @map("energia_SCEE_sem_ICMS_consumo_total")
  energiaSCEESemICMSValorUnitario   Float      @default(0) @map("energia_SCEE_sem_ICMS_valor_unitario")
  energiaSCEESemICMSValorTotal      Float      @default(0) @map("energia_SCEE_sem_ICMS_valor_total")
  energiaCompensadaGDIEmKWh         Int        @default(0) @map("energia_compensada_GDI_em_KWh")
  energiaCompensadaGDIGerada        Int        @default(0) @map("energia_compensada_GDI_gerada")
  energiaCompensadaGDIValorUnitario Float      @default(0) @map("energia_compensada_GDI_valor_unitario")
  energiaCompensadaGDIValorTotal    Float      @default(0) @map("energia_compensada_GDI_valor_total")

  @@map("contas")
}
